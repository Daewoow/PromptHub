@page "/openitem/{Id}"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using BlazorApp1.Models
@using BlazorApp1.Services
@inject UIPromptService UiPromptService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Open UIPrompt</h3>

@if (_openUiPrompt == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <button class="btn btn-secondary mb-3" @onclick="NavigateToPromptsList">← Back to UIPrompts List</button>

        <div class="card">
            <div class="card-body">
                <h5 class="card-title">UIPrompt Details</h5>

                <p><strong>Name of UIUser:</strong> @_openUiPrompt.NameOfUser</p>
                <p><strong>Name of UIPrompt:</strong> @_openUiPrompt.NameOfPrompt</p>
                <p><strong>Last Updated:</strong> @_openUiPrompt.TimeOfUpdate.ToString("g")</p>
                <p><strong>Description:</strong> @_openUiPrompt.Description</p>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }
    private UIPrompt _openUiPrompt;

    protected override async Task OnInitializedAsync()
    {
        _openUiPrompt = await UiPromptService.ReadPromptAsync(int.Parse(Id));
    }

    private void NavigateToPromptsList()
    {
        NavigationManager.NavigateTo("/promptslist");
    }
}
