@page "/register"
@using BlazorApp1.Models
@inject NavigationManager NavigationManager
@inject RegistrationService RegistrationService
@rendermode InteractiveServer

<h3>Регистрация</h3>

<EditForm EditContext="@editContext" Model="registerModel" FormName="Registration New User" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label for="nameOfUser">Имя: </label>
        <InputText id="nameOfUser" class="form-control" @bind-Value="registerModel.Username" />
    </div>
    <div>
        <label for="nameOfPrompt">Пароль: </label>
        <InputText id="nameOfPrompt" class="form-control" @bind-Value="registerModel.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Зарегистрироваться</button>
</EditForm>


@if (errorMessage != null)
{
<div class="alert alert-danger mt-3">@errorMessage</div>
}

@if (successMessage != null)
{
<div class="alert alert-success mt-3">@successMessage</div>
}


@code {
    private RegisterModel registerModel = new();
    private EditContext editContext;
    public string errorMessage;
    public string successMessage;

    private async Task HandleRegistration()
    {
        if (string.IsNullOrEmpty(registerModel.Username) || string.IsNullOrEmpty(registerModel.Password))
        {
            errorMessage = "Все поля должны быть заполнены.";
            successMessage = null;
            return;
        }

        try
        {
            var isRegistered = await RegistrationService.RegisterAsync(registerModel);

            if (isRegistered)
            {
                successMessage = "Регистрация выполнена успешно! Вы будете перенаправлены на страницу входа.";
                errorMessage = null;
                await Task.Delay(1000);
                NavigationManager.NavigateTo("/");
            }
            else
            {
                errorMessage = "Не удалось выполнить регистрацию. Проверьте введённые данные.";
                successMessage = null;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Произошла ошибка: {ex.Message}";
            successMessage = null;
        }
    }
}