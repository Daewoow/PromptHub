@page "/edititem/{Id}"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using BlazorApp1.Models
@using BlazorApp1.Services
@inject UIPromptService UiPromptService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Edit UIPrompt</h3>

@if (_editUiPrompt == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="_editUiPrompt" FormName="Edit Form" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>NameOfUIUser: </label>
            <InputText class="form-control" id="nameOfUser" @bind-Value="_editUiPrompt.NameOfUser" />
        </div>
        <div>
            <label>NameOfUIPrompt: </label>
            <InputText class="form-control" id="nameOfPrompt" @bind-Value="_editUiPrompt.NameOfPrompt" />
        </div>
        <div>
            <label>Description: </label>
            <InputText class="form-control" id="description" @bind-Value="_editUiPrompt.Description" />
        </div>

        <button class="btn btn-primary" type="submit">Save</button>
    </EditForm>
}

@code {
    [Parameter]
    public string Id { get; set; }
    private UIPrompt _editUiPrompt;

    protected override async Task OnInitializedAsync()
    {
        _editUiPrompt = await UiPromptService.ReadPromptAsync(int.Parse(Id));
    }

    private async Task HandleValidSubmit()
    {
        _editUiPrompt.TimeOfUpdate = DateTime.Now;
        await UiPromptService.UpdatePromptAsync(_editUiPrompt);
        NavigationManager.NavigateTo("/promptslist");
    }
}